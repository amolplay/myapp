<%= form_for(@article,:html => {:class => "dropzone",:id => "stepbystep_form",:multipart => true  }) do |f| %>
  <% if @article.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@article.errors.count, "error") %> prohibited this article from being saved:</h2>

      <ul>
      <% @article.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul> 
    </div>
  <% end %>

  <div class="field">
    <%= f.label :name %><br>
    <%= f.text_field :name %>
  </div>

<div class="form-group row">
    <div  class="col-sm-2 control-label">
      <label>Drag and Drop<br><small>Only works on Latest Chrome, Firefox, Safari &amp; IE</small></label>
    </div>   
    <div class="col-sm-10 text-center" style="border:1px solid black">   
      <div class="dz-clickable" id="dropzoneClick">
        <div class="dropzone-previews" id="dropzonePreview">
            <div class="dz-message" data-dz-message>
              <span>
                <p>
                  <em class="fa fa-cloud-upload fa-2x"></em>
                </p>
                Upload files by dropping them here or
                <div class="btn-link form-file">selecting one</div>          
              </span>
            </div> 
        </div>
        <div class="fallback">
          <%= file_field_tag "image", :multiple => true  %>
        </div>
      </div>
    </div>
  </div> 

--------<br/>

  <div class="actions">
    <button type="submit" id="stepbystepformbutton">Save</button>
  </div>
<% end %>


<!--SCRIPT -->
  <script type="text/javascript">
  Dropzone.options.stepbystepForm = {
  addRemoveLinks: true,
  uploadMultiple: true,
  paramName: "image", //article[attachments_attributes][image]
  previewsContainer: "#dropzonePreview",
  clickable: "#dropzoneClick",
  autoProcessQueue: false,
  parallelUploads: 100,
  maxFiles: 100,
  init: function() {
    var myDropzone = this;
    "<%= @article.attachments.each do |attachment| %>"
     var mockFile = { name: "<%= attachment.image %>", size: 12345 };
     myDropzone.emit("addedfile", mockFile);
     myDropzone.emit("thumbnail", mockFile, "<%= attachment.image %>");
    "<% end %>"
    // First change the button to actually tell Dropzone to process the queue.

    this.element.querySelector("button[type=submit]").addEventListener("click", function(e) {
      console.log("hi")
      // Make sure that the form isn't actually being sent.
      e.preventDefault();
      e.stopPropagation();
      myDropzone.processQueue();
    });
    // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
    // of the sending event because uploadMultiple is set to true.
    this.on("sendingmultiple", function() {
      // Gets triggered when the form is actually being sent.
      // Hide the success button or the complete form.
    });
    this.on("successmultiple", function(files, response) {
      // Gets triggered when the files have successfully been sent.
      // Redirect user or notify of success.
    });
    this.on("errormultiple", function(files, response) {
      // Gets triggered when there was an error sending the files.
      // Maybe show form again, and notify user of error
    });
  }


};
// $("#stepbystepformbutton").click(function(){
//   $("#stepbystep_form").submit();
// });
</script>
<style type="text/css">
.dropzone .dz-clickable
{
  cursor: pointer;
  background: #F7F7F7;
}
.dropzone {
  background: none;
}
</style>